{"ast":null,"code":"var _jsxFileName = \"/Users/fendiversace/react-quiz/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fetchQuizQuestions } from './Components/API';\n\n// Components\nimport QuestionCard from './Components/QuestionCard';\n// Types\nimport { Difficulty } from './Components/API';\n// Styles\nimport { GlobalStyle, Wrapper } from './App.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 10;\nconst App = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n  const checkAnswer = e => {\n    if (!gameOver) {\n      // User's answer\n      const answer = e.currentTarget.value;\n      // Check answer against correct answer\n      const correct = questions[number].correct_Answer === answer;\n      // Add score if answer is correct\n      if (correct) setScore(prev => prev + 1);\n      // Save the answer in the array for user answers\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer\n      };\n      setUserAnswers(prev => [...prev, answerObject]);\n    }\n  };\n  const nextQuestion = () => {\n    // Move on to the next question if not the last question\n    const nextQ = number + 1;\n    if (nextQ === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    } else {\n      setNumber(nextQ);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"REACT QUIZ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), gameOver || userAnswers.length === TOTAL_QUESTIONS ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start\",\n        onClick: startTrivia,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : null, !gameOver ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 22\n      }, this) : null, loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Questions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }, this) : null, !loading && !gameOver && /*#__PURE__*/_jsxDEV(QuestionCard, {\n        questionNr: number + 1,\n        totalQuestions: TOTAL_QUESTIONS,\n        question: questions[number].question,\n        answers: questions[number].answers,\n        userAnswer: userAnswers ? userAnswers[number] : undefined,\n        callback: checkAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), !gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: nextQuestion,\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"3vxO9CiM0ITniaGpI+eu+AjXM9U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fetchQuizQuestions","QuestionCard","Difficulty","GlobalStyle","Wrapper","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","startTrivia","newQuestions","EASY","checkAnswer","e","answer","currentTarget","value","correct","correct_Answer","prev","answerObject","question","correctAnswer","correct_answer","nextQuestion","nextQ","length","answers","undefined"],"sources":["/Users/fendiversace/react-quiz/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { fetchQuizQuestions } from './Components/API';\n\n// Components\nimport QuestionCard from './Components/QuestionCard';\n// Types\nimport { QuestionState, Difficulty } from './Components/API';\n// Styles\nimport { GlobalStyle, Wrapper } from './App.style';\n\nexport type AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n};\n\nconst TOTAL_QUESTIONS = 10;\n\nconst App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = (e: any) => {\n    if (!gameOver) {\n      // User's answer\n      const answer = e.currentTarget.value;\n      // Check answer against correct answer\n      const correct = questions[number].correct_Answer === answer;\n      // Add score if answer is correct\n      if (correct) setScore((prev) => prev + 1);\n      // Save the answer in the array for user answers\n      const answerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer,\n      };\n      setUserAnswers((prev) => [...prev, answerObject]);\n    }\n  };\n\n  const nextQuestion = () => {\n    // Move on to the next question if not the last question\n    const nextQ = number + 1;\n\n    if (nextQ === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    } else {\n      setNumber(nextQ);\n    }\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <Wrapper>\n        <h1>REACT QUIZ</h1>\n        {gameOver || userAnswers.length === TOTAL_QUESTIONS ? (\n          <button className='start' onClick={startTrivia}>\n            Start\n          </button>\n        ) : null}\n        {!gameOver ? <p className='score'>Score: {score}</p> : null}\n        {loading ? <p>Loading Questions...</p> : null}\n        {!loading && !gameOver && (\n          <QuestionCard\n            questionNr={number + 1}\n            totalQuestions={TOTAL_QUESTIONS}\n            question={questions[number].question}\n            answers={questions[number].answers}\n            userAnswer={userAnswers ? userAnswers[number] : undefined}\n            callback={checkAnswer}\n          />\n        )}\n        {!gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? (\n          <button className='next' onClick={nextQuestion}>\n            Next Question\n          </button>\n        ) : null}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}