{"ast":null,"code":"var _jsxFileName = \"/Users/fendiversace/react-quiz/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fetchQuizQuestions } from './Components/API';\n\n// Components\nimport QuestionCard from './Components/QuestionCard';\n// Types\nimport { Difficulty } from './Components/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 10;\nconst App = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumbers] = useState(0);\n  const [userAnswer, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  console.log(questions);\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumbers(0);\n    setLoading(false);\n  };\n  const checkAnswer = e => {};\n  const nextQuestion = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"REACT QUIZ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), gameOver || userAnswer.length == TOTAL_QUESTIONS ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start\",\n      onClick: startTrivia,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : null, !gameOver ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score\",\n      children: \"Score:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 20\n    }, this) : null, !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Questions ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCard, {\n      questionNr: number + 1,\n      totalQuestions: TOTAL_QUESTIONS,\n      question: questions[number].question,\n      answers: questions[number].answers,\n      userAnswer: userAnswer ? userAnswer[number] : undefined,\n      callback: checkAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next\",\n      onClick: nextQuestion,\n      children: \" Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/HpQnmdXT81t6DJ93zTyNUiy+2A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fetchQuizQuestions","QuestionCard","Difficulty","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumbers","userAnswer","setUserAnswers","score","setScore","gameOver","setGameOver","console","log","startTrivia","newQuestions","EASY","checkAnswer","e","nextQuestion","length","question","answers","undefined"],"sources":["/Users/fendiversace/react-quiz/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { fetchQuizQuestions } from './Components/API';\n\n// Components\nimport QuestionCard from './Components/QuestionCard';\n// Types\nimport { QuestionState, Difficulty } from './Components/API';\n\ntype AnswerObject ={\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n}\n\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n\n  const[loading, setLoading] = useState(false);\n  const[questions, setQuestions] = useState<QuestionState[]>([]);\n  const[number, setNumbers] = useState(0);\n  const[userAnswer, setUserAnswers] = useState<AnswerObject[]>([]);\n  const[score, setScore] = useState(0);\n  const[gameOver, setGameOver] =  useState(true);\n\n  console.log(questions);\n\n  const startTrivia = async () =>\n  {\n    setLoading(true);\n    setGameOver(false);\n\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    \n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumbers(0);\n    setLoading(false);\n  }\n\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) =>\n  {\n\n  }\n  const nextQuestion = () =>{\n\n  }\n  return (\n    <div className=\"App\">\n      <h1>REACT QUIZ</h1>\n      {gameOver || userAnswer.length == TOTAL_QUESTIONS ?(\n        <button className='start' onClick={startTrivia}>\n          Start\n        </button>\n      ): null}\n\n      {!gameOver ? <p className=\"score\">Score:</p> : null} \n      {!loading && <p>Loading Questions ...</p> }\n      <QuestionCard \n        questionNr={number +1}\n        totalQuestions = {TOTAL_QUESTIONS}\n        question ={questions[number].question}\n        answers = {questions[number].answers}\n        userAnswer ={userAnswer ? userAnswer[number]: undefined}\n        callback = {checkAnswer}\n      />\n      <button className=\"next\" onClick={nextQuestion}> Next Question</button>\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,kBAAkB,QAAQ,kBAAkB;;AAErD;AACA,OAAOC,YAAY,MAAM,2BAA2B;AACpD;AACA,SAAwBC,UAAU,QAAQ,kBAAkB;AAAC;AAS7D,MAAMC,eAAe,GAAG,EAAE;AAE1B,MAAMC,GAAG,GAAG,MAAM;EAAA;EAEhB,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAK,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAkB,EAAE,CAAC;EAC9D,MAAK,CAACU,MAAM,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAK,CAACY,UAAU,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAiB,EAAE,CAAC;EAChE,MAAK,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACpC,MAAK,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAIjB,QAAQ,CAAC,IAAI,CAAC;EAE9CkB,OAAO,CAACC,GAAG,CAACX,SAAS,CAAC;EAEtB,MAAMY,WAAW,GAAG,YACpB;IACEb,UAAU,CAAC,IAAI,CAAC;IAChBU,WAAW,CAAC,KAAK,CAAC;IAElB,MAAMI,YAAY,GAAG,MAAMpB,kBAAkB,CAACG,eAAe,EAAED,UAAU,CAACmB,IAAI,CAAC;IAE/Eb,YAAY,CAACY,YAAY,CAAC;IAC1BN,QAAQ,CAAC,CAAC,CAAC;IACXF,cAAc,CAAC,EAAE,CAAC;IAClBF,UAAU,CAAC,CAAC,CAAC;IACbJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAGD,MAAMgB,WAAW,GAAIC,CAAsC,IAC3D,CAEA,CAAC;EACD,MAAMC,YAAY,GAAG,MAAK,CAE1B,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,EAClBT,QAAQ,IAAIJ,UAAU,CAACc,MAAM,IAAItB,eAAe,gBAC/C;MAAQ,SAAS,EAAC,OAAO;MAAC,OAAO,EAAEgB,WAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEtC,GACR,IAAI,EAEN,CAACJ,QAAQ,gBAAG;MAAG,SAAS,EAAC,OAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAW,GAAG,IAAI,EAClD,CAACV,OAAO,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA4B,eACzC,QAAC,YAAY;MACX,UAAU,EAAEI,MAAM,GAAE,CAAE;MACtB,cAAc,EAAIN,eAAgB;MAClC,QAAQ,EAAGI,SAAS,CAACE,MAAM,CAAC,CAACiB,QAAS;MACtC,OAAO,EAAInB,SAAS,CAACE,MAAM,CAAC,CAACkB,OAAQ;MACrC,UAAU,EAAGhB,UAAU,GAAGA,UAAU,CAACF,MAAM,CAAC,GAAEmB,SAAU;MACxD,QAAQ,EAAIN;IAAY;MAAA;MAAA;MAAA;IAAA,QACxB,eACF;MAAQ,SAAS,EAAC,MAAM;MAAC,OAAO,EAAEE,YAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB;EAAA;IAAA;IAAA;IAAA;EAAA,QACjE;AAEZ,CAAC;AAAA,GAvDKpB,GAAG;AAAA,KAAHA,GAAG;AAyDT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}