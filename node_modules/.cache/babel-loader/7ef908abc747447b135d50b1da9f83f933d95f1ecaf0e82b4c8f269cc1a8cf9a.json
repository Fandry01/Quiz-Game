{"ast":null,"code":"import _regeneratorRuntime from\"/Users/fendiversace/react-quiz/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _toConsumableArray from\"/Users/fendiversace/react-quiz/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/fendiversace/react-quiz/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/fendiversace/react-quiz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{shuffleArray}from\"../Utils\";export var Difficulty;(function(Difficulty){Difficulty[\"EASY\"]=\"easy\";Difficulty[\"MEDIUM\"]=\"medium\";Difficulty[\"HARD\"]=\"hard\";})(Difficulty||(Difficulty={}));export var fetchQuizQuestions=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(amount,difficulty){var endpoint,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:endpoint=\"https://opentdb.com/api.php?amount=\".concat(amount,\"&difficulty=\").concat(difficulty,\"&type=multiple\");_context.next=3;return fetch(endpoint);case 3:_context.next=5;return _context.sent.json();case 5:data=_context.sent;return _context.abrupt(\"return\",data.results.map(function(question){return _objectSpread(_objectSpread({},question),{},{answers:shuffleArray([].concat(_toConsumableArray(question.incorrect_answers),[question.correct_Answer]))});}));case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchQuizQuestions(_x,_x2){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["shuffleArray","Difficulty","fetchQuizQuestions","amount","difficulty","endpoint","fetch","json","data","results","map","question","answers","incorrect_answers","correct_Answer"],"sources":["/Users/fendiversace/react-quiz/src/Components/API.ts"],"sourcesContent":["import { shuffleArray } from \"../Utils\";\n\nexport type Question = {\n    category: string;\n    correct_Answer: string;\n    difficulty: string;\n    incorrect_answers: string[];\n    question: string;\n    type: string;\n}\n\nexport enum Difficulty{\n    EASY = \"easy\",\n    MEDIUM = \"medium\",\n    HARD = \"hard\",\n\n}\n\nexport type QuestionState = Question & {answers: string[]};\n\n\n\nexport const fetchQuizQuestions = async (amount: number, difficulty: Difficulty): Promise<QuestionState[]> =>\n{\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\n    const data = await (await fetch(endpoint)).json(); \n    return data.results.map((question: Question) =>(\n    {\n        ...question,\n        answers: shuffleArray([... question.incorrect_answers, question.correct_Answer])\n    }))\n} ;"],"mappings":"ueAAA,OAASA,YAAY,KAAQ,UAAU,CAWvC,UAAYC,WAAU,CAKrB,UALWA,UAAU,EAAVA,UAAU,gBAAVA,UAAU,oBAAVA,UAAU,mBAAVA,UAAU,GAAVA,UAAU,MAWtB,MAAO,IAAMC,mBAAkB,4FAAG,iBAAOC,MAAc,CAAEC,UAAsB,sIAErEC,QAAQ,8CAAyCF,MAAM,wBAAeC,UAAU,yCAC5DE,MAAK,CAACD,QAAQ,CAAC,6CAAEE,IAAI,UAAzCC,IAAI,+CACHA,IAAI,CAACC,OAAO,CAACC,GAAG,CAAC,SAACC,QAAkB,wCAEpCA,QAAQ,MACXC,OAAO,CAAEZ,YAAY,8BAAMW,QAAQ,CAACE,iBAAiB,GAAEF,QAAQ,CAACG,cAAc,GAAE,IAClF,CAAC,wDACN,kBATYZ,mBAAkB,gDAS9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}