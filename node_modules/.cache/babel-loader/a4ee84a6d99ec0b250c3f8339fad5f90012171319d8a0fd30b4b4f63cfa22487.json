{"ast":null,"code":"import _toConsumableArray from\"/Users/fendiversace/react-quiz/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"/Users/fendiversace/react-quiz/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/fendiversace/react-quiz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/fendiversace/react-quiz/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{fetchQuizQuestions}from'./Components/API';// Components\nimport QuestionCard from'./Components/QuestionCard';// Types\nimport{Difficulty}from'./Components/API';// Styles\nimport{GlobalStyle,Wrapper}from'./App.style';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var TOTAL_QUESTIONS=10;var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),questions=_useState4[0],setQuestions=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),number=_useState6[0],setNumbers=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),userAnswer=_useState8[0],setUserAnswers=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),score=_useState10[0],setScore=_useState10[1];var _useState11=useState(true),_useState12=_slicedToArray(_useState11,2),gameOver=_useState12[0],setGameOver=_useState12[1];var startTrivia=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var newQuestions;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);setGameOver(false);_context.next=4;return fetchQuizQuestions(TOTAL_QUESTIONS,Difficulty.EASY);case 4:newQuestions=_context.sent;setQuestions(newQuestions);setScore(0);setUserAnswers([]);setNumbers(0);setLoading(false);case 10:case\"end\":return _context.stop();}}},_callee);}));return function startTrivia(){return _ref.apply(this,arguments);};}();var checkAnswer=function checkAnswer(e){if(!gameOver){// users answer\nvar answer=e.currentTarget.value;// check answer against correct answer\nvar correct=questions[number].correct_Answer===answer;// add score if answer is correct\nif(correct)setScore(function(prev){return prev+1;});// save answer in the array for user answers\nvar _AnswerObject={question:questions[number].question,answer:answer,correct:correct,correctAnswer:questions[number].correct_Answer};setUserAnswers(function(prev){return[].concat(_toConsumableArray(prev),[_AnswerObject]);});}};var nextQuestion=function nextQuestion(){// move on to the next question\nvar nextQuestion=number+1;if(nextQuestion===TOTAL_QUESTIONS){setGameOver(true);}else{setNumbers(nextQuestion);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(GlobalStyle,{}),/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"REACT QUIZ\"}),gameOver||userAnswer.length===TOTAL_QUESTIONS?/*#__PURE__*/_jsx(\"button\",{className:\"start\",onClick:startTrivia,children:\"Start\"}):null,!gameOver?/*#__PURE__*/_jsxs(\"p\",{className:\"score\",children:[\"Score: \",score]}):null,loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading Questions ...\"}):null,!loading&&!gameOver&&/*#__PURE__*/_jsx(QuestionCard,{questionNr:number+1,totalQuestions:TOTAL_QUESTIONS,question:questions[number].question,answers:questions[number].answers,userAnswer:userAnswer?userAnswer[number]:undefined,callback:checkAnswer}),!gameOver&&!loading&&userAnswer.length===number+1&&number!==TOTAL_QUESTIONS-1?/*#__PURE__*/_jsx(\"button\",{className:\"next\",onClick:nextQuestion,children:\" Next Question\"}):null,\";\"]})]});};export default App;","map":{"version":3,"names":["React","useState","fetchQuizQuestions","QuestionCard","Difficulty","GlobalStyle","Wrapper","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumbers","userAnswer","setUserAnswers","score","setScore","gameOver","setGameOver","startTrivia","EASY","newQuestions","checkAnswer","e","answer","currentTarget","value","correct","correct_Answer","prev","AnswerObject","question","correctAnswer","nextQuestion","length","answers","undefined"],"sources":["/Users/fendiversace/react-quiz/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { fetchQuizQuestions } from './Components/API';\n\n// Components\nimport QuestionCard from './Components/QuestionCard';\n// Types\nimport { QuestionState, Difficulty } from './Components/API';\n// Styles\nimport { GlobalStyle, Wrapper } from './App.style';\n\nexport type AnswerObject ={\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n}\n\nconst TOTAL_QUESTIONS = 10;\n\nconst App: React.FC = () => {\n\n  const[loading, setLoading] = useState(false);\n  const[questions, setQuestions] = useState<QuestionState[]>([]);\n  const[number, setNumbers] = useState(0);\n  const[userAnswer, setUserAnswers] = useState<AnswerObject[]>([]);\n  const[score, setScore] = useState(0);\n  const[gameOver, setGameOver] =  useState(true);\n\n\n  const startTrivia = async () =>\n  {\n    setLoading(true);\n    setGameOver(false);\n\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    \n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumbers(0);\n    setLoading(false);\n  };\n\n\n  const checkAnswer = (e: any) =>\n  {\n    if(!gameOver){\n      // users answer\n      const answer = e.currentTarget.value;\n      // check answer against correct answer\n      const correct = questions[number].correct_Answer === answer;\n      // add score if answer is correct\n      if(correct) setScore(prev => prev + 1);\n      // save answer in the array for user answers\n      const AnswerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_Answer,\n      };\n      setUserAnswers((prev) => [...prev, AnswerObject]);\n    }\n\n  };\n\n  const nextQuestion = () =>{\n    // move on to the next question\n    const nextQuestion = number + 1;\n    \n    if(nextQuestion === TOTAL_QUESTIONS){\n      setGameOver(true);\n    }else{setNumbers(nextQuestion);}\n  };\n\n  return (\n    <>\n    <GlobalStyle />\n    <Wrapper>\n      <h1>REACT QUIZ</h1>\n      {gameOver || userAnswer.length === TOTAL_QUESTIONS ? (\n        <button className='start' onClick={startTrivia}>\n          Start\n        </button>\n      ) : null}\n\n      {!gameOver ? <p className='score'>Score: {score}</p> : null} \n      {loading ? <p>Loading Questions ...</p> : null}\n      {!loading && !gameOver &&(\n        <QuestionCard \n          questionNr={number + 1}\n          totalQuestions = {TOTAL_QUESTIONS}\n          question ={questions[number].question}\n          answers = {questions[number].answers}\n          userAnswer ={userAnswer ? userAnswer[number]: undefined}\n          callback = {checkAnswer}\n        />\n        )}  \n        {!gameOver && !loading && userAnswer.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ?(\n           <button className= 'next' onClick={nextQuestion}> Next Question</button> \n        ) : null};\n      \n      </Wrapper>\n      </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}