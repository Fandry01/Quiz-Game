{"ast":null,"code":"var _jsxFileName = \"/Users/fendiversace/react-quiz/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fetchQuizQuestions } from './Components/API';\n\n// Components\nimport QuestionCard from './Components/QuestionCard';\n// Types\nimport { Difficulty } from './Components/API';\n// Styles\nimport { GlobalStyle, Wrapper } from './App.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 10;\nconst App = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumbers] = useState(0);\n  const [userAnswer, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumbers(0);\n    setLoading(false);\n  };\n  const checkAnswer = e => {\n    if (!gameOver) {\n      // users answer\n      const answer = e.currentTarget.value;\n      // check answer against correct answer\n      const correct = questions[number].correct_Answer === answer;\n      // add score if answer is correct\n      if (correct) setScore(prev => prev + 1);\n      // save answer in the array for user answers\n      const AnswerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_Answer\n      };\n      setUserAnswers(prev => [...prev, AnswerObject]);\n    }\n  };\n  const nextQuestion = () => {\n    // move on to the next question\n    const nextQuestion = number + 1;\n    if (nextQuestion === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    } else {\n      setNumbers(nextQuestion);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"REACT QUIZ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), gameOver || userAnswer.length == TOTAL_QUESTIONS ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start\",\n        onClick: startTrivia,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this) : null, !gameOver ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 20\n      }, this) : null, loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Questions ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 18\n      }, this) : null, !loading && !gameOver && /*#__PURE__*/_jsxDEV(QuestionCard, {\n        questionNr: number + 1,\n        totalQuestions: TOTAL_QUESTIONS,\n        question: questions[number].question,\n        answers: questions[number].answers,\n        userAnswer: userAnswer ? userAnswer[number] : undefined,\n        callback: checkAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), !gameOver && !loading && userAnswer.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next\",\n        onClick: nextQuestion,\n        children: \" Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 12\n      }, this) : null, \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"/HpQnmdXT81t6DJ93zTyNUiy+2A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fetchQuizQuestions","QuestionCard","Difficulty","GlobalStyle","Wrapper","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumbers","userAnswer","setUserAnswers","score","setScore","gameOver","setGameOver","startTrivia","newQuestions","EASY","checkAnswer","e","answer","currentTarget","value","correct","correct_Answer","prev","AnswerObject","question","correctAnswer","nextQuestion","length","answers","undefined"],"sources":["/Users/fendiversace/react-quiz/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { fetchQuizQuestions } from './Components/API';\n\n// Components\nimport QuestionCard from './Components/QuestionCard';\n// Types\nimport { QuestionState, Difficulty } from './Components/API';\n// Styles\nimport { GlobalStyle, Wrapper } from './App.style';\n\nexport type AnswerObject ={\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n}\n\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n\n  const[loading, setLoading] = useState(false);\n  const[questions, setQuestions] = useState<QuestionState[]>([]);\n  const[number, setNumbers] = useState(0);\n  const[userAnswer, setUserAnswers] = useState<AnswerObject[]>([]);\n  const[score, setScore] = useState(0);\n  const[gameOver, setGameOver] =  useState(true);\n\n\n  const startTrivia = async () =>\n  {\n    setLoading(true);\n    setGameOver(false);\n\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    \n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumbers(0);\n    setLoading(false);\n  }\n\n\n  const checkAnswer = (e: any) =>\n  {\n    if(!gameOver){\n      // users answer\n      const answer = e.currentTarget.value;\n      // check answer against correct answer\n      const correct = questions[number].correct_Answer === answer;\n      // add score if answer is correct\n      if(correct) setScore(prev => prev + 1);\n      // save answer in the array for user answers\n      const AnswerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_Answer,\n      };\n      setUserAnswers((prev) => [...prev, AnswerObject])\n    }\n\n  }\n  const nextQuestion = () =>{\n    // move on to the next question\n    const nextQuestion = number +1;\n    \n    if(nextQuestion === TOTAL_QUESTIONS){\n      setGameOver(true);\n    }else{setNumbers(nextQuestion);}\n  }\n  return (\n    <>\n    <GlobalStyle/>\n    <Wrapper>\n      <h1>REACT QUIZ</h1>\n      {gameOver || userAnswer.length == TOTAL_QUESTIONS ?(\n        <button className='start' onClick={startTrivia}>\n          Start\n        </button>\n      ) : null}\n\n      {!gameOver ? <p className=\"score\">Score: {score}</p> : null} \n      {loading ? <p>Loading Questions ...</p> :null }\n      {!loading && !gameOver &&(\n        <QuestionCard \n          questionNr={number + 1}\n          totalQuestions = {TOTAL_QUESTIONS}\n          question ={questions[number].question}\n          answers = {questions[number].answers}\n          userAnswer ={userAnswer ? userAnswer[number]: undefined}\n          callback = {checkAnswer}\n        />\n        )}\n        {!gameOver && !loading && userAnswer.length === number +1 && number !== TOTAL_QUESTIONS - 1 ?(\n           <button className=\"next\" onClick={nextQuestion}> Next Question</button> \n        ) :null };\n      \n      </Wrapper>\n      </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}